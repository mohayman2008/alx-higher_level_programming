#def matrix_divided(matrix, div)

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix_divided([[1, 2, 3],
...		   [4, 5, 6]], 4)
[[0.25, 0.5, 0.75], [1.0, 1.25, 1.5]]

>>> matrix_divided([(1, 2, 3),
...		   [4, 5, 6]], 4)
Traceback (most recent call last):
	  ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(([1, 2, 3],
...		   [4, 5, 6]), 4)
Traceback (most recent call last):
	  ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([
...		   [1, 2, 3],
...		   [4, (5,), 6]
...		   ], 4)
Traceback (most recent call last):
	  ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([
...		   [1, 2, 3],
...		   [4, 5, 6],
...		   [3, 2]
...		   ], 4)
Traceback (most recent call last):
	  ...
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([
...		   [1, 2],
...		   ], 0.5)
[[2.0, 4.0]]


>>> matrix_divided([
...		   [1, 2],
...		   ], -0.5)
[[-2.0, -4.0]]

>>> matrix_divided([[]], 0.5)
[[]]

>>> matrix_divided([
...		   [1, 2, 3],
...		   [4, 5, 6]
...		   ], "4")
Traceback (most recent call last):
	  ...
TypeError: div must be a number


>>> matrix_divided([
...		   [1, 2, 3],
...		   [4, 5, 6]
...		   ], 0)
Traceback (most recent call last):
	  ...
ZeroDivisionError: division by zero
